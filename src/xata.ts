// Generated by Xata Codegen 0.23.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  { name: "SESSION_PUBLIC_KEYS", columns: [{ name: "key", type: "string" }] },
  {
    name: "users",
    columns: [
      { name: "username", type: "string", unique: true },
      { name: "hash", type: "string" },
    ],
  },
  {
    name: "friends",
    columns: [
      { name: "user1", type: "link", link: { table: "users" }, unique: true },
      { name: "user2", type: "link", link: { table: "users" }, unique: true },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type SessionPublicKeys = InferredTypes["SESSION_PUBLIC_KEYS"];
export type SessionPublicKeysRecord = SessionPublicKeys & XataRecord;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type Friends = InferredTypes["friends"];
export type FriendsRecord = Friends & XataRecord;

export type DatabaseSchema = {
  SESSION_PUBLIC_KEYS: SessionPublicKeysRecord;
  users: UsersRecord;
  friends: FriendsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://shr4pnel-s-workspace-vkimoc.eu-west-1.xata.sh/db/shr4pneljs",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
